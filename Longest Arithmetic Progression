Longest Arithmetic Progression
int Solution::solve(const vector<int> &A) {
    int n=A.size();
    if(n<=2){
        return n;
    }
    int ans=0;
    unordered_map<int,int>dp;
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            int diff=A[j]-A[i];
            int cnt=1;
            if(dp[j].count(diff)){
                cnt=dp[j][diff];
                
            dp[i][diff]=1+cnt;
            ans=max(ans,dp[i][diff]);
            }
        }
    }
    return ans;
}
